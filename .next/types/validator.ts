// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/(dashboard)/categories/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/categories/page.js")
  handler satisfies AppPageConfig<"/categories">
}

// Validate ../../src/app/(dashboard)/inventory/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/inventory/[id]/page.js")
  handler satisfies AppPageConfig<"/inventory/[id]">
}

// Validate ../../src/app/(dashboard)/inventory/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/inventory/page.js")
  handler satisfies AppPageConfig<"/inventory">
}

// Validate ../../src/app/(dashboard)/overview/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/overview/page.js")
  handler satisfies AppPageConfig<"/overview">
}

// Validate ../../src/app/(dashboard)/reports/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/reports/page.js")
  handler satisfies AppPageConfig<"/reports">
}

// Validate ../../src/app/(dashboard)/stock-history/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/stock-history/page.js")
  handler satisfies AppPageConfig<"/stock-history">
}

// Validate ../../src/app/(dashboard)/stock-in/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/stock-in/page.js")
  handler satisfies AppPageConfig<"/stock-in">
}

// Validate ../../src/app/(dashboard)/stock-out/page.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/stock-out/page.js")
  handler satisfies AppPageConfig<"/stock-out">
}

// Validate ../../src/app/admin/verification-result/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/verification-result/page.js")
  handler satisfies AppPageConfig<"/admin/verification-result">
}

// Validate ../../src/app/admin/verify-user/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/verify-user/page.js")
  handler satisfies AppPageConfig<"/admin/verify-user">
}

// Validate ../../src/app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../src/app/forgot-password/page.tsx
{
  const handler = {} as typeof import("../../src/app/forgot-password/page.js")
  handler satisfies AppPageConfig<"/forgot-password">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/register/page.tsx
{
  const handler = {} as typeof import("../../src/app/register/page.js")
  handler satisfies AppPageConfig<"/register">
}

// Validate ../../src/app/reset-password/page.tsx
{
  const handler = {} as typeof import("../../src/app/reset-password/page.js")
  handler satisfies AppPageConfig<"/reset-password">
}

// Validate ../../src/app/verify/page.tsx
{
  const handler = {} as typeof import("../../src/app/verify/page.js")
  handler satisfies AppPageConfig<"/verify">
}

// Validate ../../src/app/api/admin/pending-users/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/pending-users/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/pending-users">
}

// Validate ../../src/app/api/admin/verify-user/route.ts
{
  const handler = {} as typeof import("../../src/app/api/admin/verify-user/route.js")
  handler satisfies RouteHandlerConfig<"/api/admin/verify-user">
}

// Validate ../../src/app/api/alerts/low-stock/route.ts
{
  const handler = {} as typeof import("../../src/app/api/alerts/low-stock/route.js")
  handler satisfies RouteHandlerConfig<"/api/alerts/low-stock">
}

// Validate ../../src/app/api/auth/forgot-password/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/forgot-password/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/forgot-password">
}

// Validate ../../src/app/api/auth/login/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/login/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/login">
}

// Validate ../../src/app/api/auth/logout/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/logout/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/logout">
}

// Validate ../../src/app/api/auth/me/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/me/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/me">
}

// Validate ../../src/app/api/auth/register/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/register/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/register">
}

// Validate ../../src/app/api/auth/reset-password/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/reset-password/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/reset-password">
}

// Validate ../../src/app/api/auth/verify/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/verify/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/verify">
}

// Validate ../../src/app/api/categories/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/categories/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/categories/[id]">
}

// Validate ../../src/app/api/categories/route.ts
{
  const handler = {} as typeof import("../../src/app/api/categories/route.js")
  handler satisfies RouteHandlerConfig<"/api/categories">
}

// Validate ../../src/app/api/charts/category-distribution/route.ts
{
  const handler = {} as typeof import("../../src/app/api/charts/category-distribution/route.js")
  handler satisfies RouteHandlerConfig<"/api/charts/category-distribution">
}

// Validate ../../src/app/api/charts/stock-movements/route.ts
{
  const handler = {} as typeof import("../../src/app/api/charts/stock-movements/route.js")
  handler satisfies RouteHandlerConfig<"/api/charts/stock-movements">
}

// Validate ../../src/app/api/charts/stock-overview/route.ts
{
  const handler = {} as typeof import("../../src/app/api/charts/stock-overview/route.js")
  handler satisfies RouteHandlerConfig<"/api/charts/stock-overview">
}

// Validate ../../src/app/api/chatbot/route.ts
{
  const handler = {} as typeof import("../../src/app/api/chatbot/route.js")
  handler satisfies RouteHandlerConfig<"/api/chatbot">
}

// Validate ../../src/app/api/dashboard/route.ts
{
  const handler = {} as typeof import("../../src/app/api/dashboard/route.js")
  handler satisfies RouteHandlerConfig<"/api/dashboard">
}

// Validate ../../src/app/api/inventory/[id]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/inventory/[id]/route.js")
  handler satisfies RouteHandlerConfig<"/api/inventory/[id]">
}

// Validate ../../src/app/api/inventory/route.ts
{
  const handler = {} as typeof import("../../src/app/api/inventory/route.js")
  handler satisfies RouteHandlerConfig<"/api/inventory">
}

// Validate ../../src/app/api/stock-movements/route.ts
{
  const handler = {} as typeof import("../../src/app/api/stock-movements/route.js")
  handler satisfies RouteHandlerConfig<"/api/stock-movements">
}

// Validate ../../src/app/api/test-low-stock-alert/route.ts
{
  const handler = {} as typeof import("../../src/app/api/test-low-stock-alert/route.js")
  handler satisfies RouteHandlerConfig<"/api/test-low-stock-alert">
}

// Validate ../../src/app/api/upload/route.ts
{
  const handler = {} as typeof import("../../src/app/api/upload/route.js")
  handler satisfies RouteHandlerConfig<"/api/upload">
}





// Validate ../../src/app/(dashboard)/layout.tsx
{
  const handler = {} as typeof import("../../src/app/(dashboard)/layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
