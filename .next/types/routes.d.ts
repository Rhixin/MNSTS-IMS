// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/verification-result" | "/admin/verify-user" | "/categories" | "/dashboard" | "/forgot-password" | "/inventory" | "/inventory/[id]" | "/login" | "/overview" | "/register" | "/reports" | "/reset-password" | "/stock-history" | "/stock-in" | "/stock-out" | "/verify"
type AppRouteHandlerRoutes = "/api/admin/pending-users" | "/api/admin/verify-user" | "/api/alerts/low-stock" | "/api/auth/forgot-password" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/me" | "/api/auth/register" | "/api/auth/reset-password" | "/api/auth/verify" | "/api/categories" | "/api/categories/[id]" | "/api/charts/category-distribution" | "/api/charts/stock-movements" | "/api/charts/stock-overview" | "/api/chatbot" | "/api/dashboard" | "/api/inventory" | "/api/inventory/[id]" | "/api/stock-movements" | "/api/test-low-stock-alert" | "/api/upload"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/verification-result": {}
  "/admin/verify-user": {}
  "/api/admin/pending-users": {}
  "/api/admin/verify-user": {}
  "/api/alerts/low-stock": {}
  "/api/auth/forgot-password": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/me": {}
  "/api/auth/register": {}
  "/api/auth/reset-password": {}
  "/api/auth/verify": {}
  "/api/categories": {}
  "/api/categories/[id]": { "id": string; }
  "/api/charts/category-distribution": {}
  "/api/charts/stock-movements": {}
  "/api/charts/stock-overview": {}
  "/api/chatbot": {}
  "/api/dashboard": {}
  "/api/inventory": {}
  "/api/inventory/[id]": { "id": string; }
  "/api/stock-movements": {}
  "/api/test-low-stock-alert": {}
  "/api/upload": {}
  "/categories": {}
  "/dashboard": {}
  "/forgot-password": {}
  "/inventory": {}
  "/inventory/[id]": { "id": string; }
  "/login": {}
  "/overview": {}
  "/register": {}
  "/reports": {}
  "/reset-password": {}
  "/stock-history": {}
  "/stock-in": {}
  "/stock-out": {}
  "/verify": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
